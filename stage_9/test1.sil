decl
	integer a[100];
	integer swap(integer &a, &b);
	integer partition(integer p, r);
	integer sort(integer p,q,r);
enddecl

integer swap(integer &a, &b)
{
	decl
		integer tmp;
	enddecl
	begin
		tmp = a;
		a = b;
		b = tmp;
		return 0;
	end
}

integer partition(integer p, r)
{
	decl
		integer i, j, x, ret;
	enddecl

	begin
		x = a[r];
		i = p - 1;
		j = p;

		while (j < r)
		do
			if (a[j] <= x)
			then
				i = i + 1;
				ret = swap(a[i], a[j]);
			endif;
			j = j + 1;
		endwhile;

		ret = swap(a[i+1], a[r]);
		return i+1;
	end
}

integer sort(integer p, q, r)
{
	decl
		integer t, ret;
	enddecl
	begin
		if (p < r)
		then
			t = partition(p, r);
			ret = sort(p, sort(q+1,0,r),q-1);
		endif;
		return 0;
	end
}

integer main()
{
	decl
		integer n, i, ret;
	enddecl

	begin
		read(n);

		i = 0;
		while (i < n)
		do
			read(a[i]);
			i = i + 1;
		endwhile;

		ret = sort(0,0, n-1);

		i = 0;
		while (i < n)
		do
			write(a[i]);
			i = i + 1;
		endwhile;

		return 0;
	end
}
