#include<stdio.h>
#include<stdlib.h>
#include"exptree_6.h"

struct gsymbol *glookup(char *name);

struct gsymbol *first = NULL, *last = NULL, *temp ;

void ginstall(char *name, int type, int size)
{

	struct gsymbol *nameconflict = glookup(name);
	if(nameconflict != NULL)
	{
		printf("name conflicts\n");
		exit(0);
	}

	struct gsymbol *newentry = (struct gsymbol *)malloc(sizeof(struct gsymbol));
	newentry->name = name;
	newentry->type = type;
	newentry->size = size;
	
	if(type == 0 || type == 2)		//------- integer or boolean
		newentry->binding = (int *)malloc(sizeof(int))

	if(type == 1 || type == 3)		//--- integer array or boolean array
		newentry->binding = (int *)malloc(size*(sizeof(int)));

		
	
	if(last == first && first == NULL)
	{
		first = newentry;
		last = newentry;
		first->next = NULL;
		last->next = NULL;
	}

	else
	{
		temp = first;
		first = newentry;
		first->next = temp;
	}
}


struct gsymbol *glookup(char *name)
{
	int flag = 0;
	if(first = NULL)
		return NULL ;
	
	for(temp = first ; temp != NULL ; temp = temp->next)
	{
		if( strcmp(temp->name,name) == 0)
		{
			flag = 1;
			break;
		}
	}

	if(flag == 1)
		return temp;
	return NULL ;
	

}
